@page "/resultDate/{survey}"
@using Radzen.Blazor
@using schedulesUnitedHosted.Shared;


@inject Radzen.DialogService DialogService;

<h3>Component1</h3>

<RadzenScheduler Data="@appointments" Style="height: 700px; padding-bottom: 30px;" TItem="Appointment"  AppointmentRender=@OnAppointmentRender StartProperty="Start" AppointmentSelect=@OnAppointmentSelect EndProperty="End" TextProperty="Text">
    <RadzenMonthView />
</RadzenScheduler>
<div style="width: 100%;">
    <RadzenCard Style="float: left; width: 50%; height: 100%;">
        <h4>Responded</h4>
        <RadzenListBox Data=@respondedList TValue="string" Style="max-height: 200px;" />
    </RadzenCard>
    <RadzenCard Style=" width: 50%; height: 100%;">
        <h4>Not Yet Responded</h4>
        <RadzenListBox Data=@notRespondedList TValue="string" Style="max-height: 200px;" />
    </RadzenCard>
</div>

@code {

    [Parameter] public Survey survey { get; set; }

    class Appointment
    {
        public DateTime Start { get; set; }
        public DateTime End { get; set; }
        public string Text { get; set; }
    }

    IList<Appointment> appointments = new List<Appointment>
{
        new Appointment { Start = DateTime.Today.AddDays(-2), End = DateTime.Today.AddDays(-2), Text = "Birthday" },
        new Appointment { Start = DateTime.Today.AddDays(-11), End = DateTime.Today.AddDays(-10), Text = "Day off" },
        new Appointment { Start = DateTime.Today.AddDays(-10), End = DateTime.Today.AddDays(-8), Text = "Work from home" },
        new Appointment { Start = DateTime.Today.AddHours(10), End = DateTime.Today.AddHours(12), Text = "Online meeting" },
        new Appointment { Start = DateTime.Today.AddHours(10), End = DateTime.Today.AddHours(13), Text = "Skype call" },
        new Appointment { Start = DateTime.Today.AddHours(14), End = DateTime.Today.AddHours(14).AddMinutes(30), Text = "Dentist appointment" },
        new Appointment { Start = DateTime.Today.AddDays(1), End = DateTime.Today.AddDays(12), Text = "Vacation" },
    };
    //NOT ALLOWED TO HAVE DUPLICATE VALUES IN RESPONDED AND NON RESPONDED LIST
    IEnumerable<string> notRespondedList = new List<string> { "Person 4", "Person 5", "Person 6", };
    IEnumerable<string> respondedList = new List<string> { "Person 1", "Person 2", "Person 3" };

    void OnAppointmentRender(SchedulerAppointmentRenderEventArgs<Appointment> args)
    {
        args.Attributes["style"] = "background: rgba(201, 76, 76, 0.3)";

    }


    protected override void OnInitialized()
    {
        Console.WriteLine(survey.ToString());
    }

    async Task OnAppointmentSelect(SchedulerAppointmentSelectEventArgs<Appointment> args)
    {
        Appointment app = appointments.Where(p => p.Start.Equals(args.Start) && p.End.Equals(args.End) && p.Start.Equals(args.Start)).FirstOrDefault();

        //get ppl who responded and show:
        await ShowAppInfo(app);

    }

    async Task ShowAppInfo(Appointment app)
    {
        IEnumerable<string> respondedApp = new List<string> { "Person 1", "Person 2", "Person 3" };
        var result = await DialogService.OpenAsync("Simple Dialog", ds =>
    @<div>
         <RadzenCard Style=" width: 50%; height: 100%;">
             <p>Responded</p>
             <RadzenListBox Data=@respondedApp TValue="string" Style="max-height: 100px;" />
         </RadzenCard>
    </div>);

}
}
