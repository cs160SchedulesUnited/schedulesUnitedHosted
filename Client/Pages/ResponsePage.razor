@page "/responsePage/{partID}/{survey}"
@using Radzen.Blazor
@using System.Linq;
@using schedulesUnitedHosted.Shared;
@inject HttpClient Http;
@inject Radzen.DialogService dialogService;




<RadzenCard Style="margin: 0px; height: 90vh;">

    <RadzenScheduler Data="@appointments" @ref=@scheduler Style="height: 200px; width: 100%; margin: 0px;" TItem="Appointment" StartProperty="Start" SlotSelect=@OnSlotSelect AppointmentSelect=@OnAppointmentSelect EndProperty="End" TextProperty="Text">
        <RadzenMonthView />
    </RadzenScheduler>
    <RadzenButton Click=OnClick Text="Submit" Icon="check_circle" ButtonStyle="ButtonStyle.Success" />


</RadzenCard>


@code {

    [Parameter] public int survey { get; set; }
    [Parameter] public string partID { get; set; }

    RadzenScheduler<Appointment> scheduler;

    class Appointment
    {
        public DateTime Start { get; set; }
        public DateTime End { get; set; }
        public string Text { get; set; }
    }
    IList<Appointment> appointments;


    protected override void OnInitialized()
    {
        Console.WriteLine($"{partID} + {survey}");
    }

    public async Task OnClick()
    {

        foreach (Appointment appointment in appointments)
        {

            try
            {
                @*Response r = new Response(partID, );
                var respUser = await Http.PostFromJsonAsync<Response>($"respond");*@
            }
            catch (Exception ex)
            {

            }
        }

    }

    async Task OnSlotSelect(SchedulerSlotSelectEventArgs args)
    {

        appointments.Add(new Appointment { Start = args.Start, End = args.End, Text = "Busy" });
        await scheduler.Reload();

    }


    async Task OnAppointmentSelect(SchedulerAppointmentSelectEventArgs<Appointment> args)
    {
        Appointment app = appointments.Where(p => p.Start.Equals(args.Start) && p.End.Equals(args.End) && p.Start.Equals(args.Start)).FirstOrDefault();

        appointments.RemoveAt(appointments.IndexOf(app));

        await scheduler.Reload();
    }
}
